"""update selected_problem

Revision ID: c13d11c5f643
Revises: bb816cc478a9
Create Date: 2025-07-22 12:37:30.322277

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'c13d11c5f643'
down_revision: Union[str, Sequence[str], None] = 'bb816cc478a9'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # Создание enum-типа
    contest_rule_type_enum = postgresql.ENUM('DEFAULT', 'BURNING_ALL', 'BURNING_SELECTED', name='contestruletype')
    contest_rule_type_enum.create(op.get_bind())

    # Добавляем колонку с временным значением по умолчанию
    op.add_column(
        'contest',
        sa.Column(
            'rule_type',
            sa.Enum('DEFAULT', 'BURNING_ALL', 'BURNING_SELECTED', name='contestruletype'),
            nullable=False,
            server_default='DEFAULT',  # <- временное значение по умолчанию
        )
    )

    # Убираем server_default, если оно не нужно дальше
    op.alter_column('contest', 'rule_type', server_default=None)

    # Аналогично для второго поля
    op.add_column(
        'contest',
        sa.Column(
            'flag_user_can_have_negative_points',
            sa.Boolean(),
            nullable=False,
            server_default=sa.false()  # или sa.true() — зависит от твоей бизнес-логики
        )
    )
    op.alter_column('contest', 'flag_user_can_have_negative_points', server_default=None)


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('contest', 'flag_user_can_have_negative_points')
    op.drop_column('contest', 'rule_type')
    # ### end Alembic commands ###
