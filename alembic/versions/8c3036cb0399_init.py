"""init

Revision ID: 8c3036cb0399
Revises: 
Create Date: 2025-07-14 21:11:28.380870

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '8c3036cb0399'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('contest',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=256), nullable=False),
    sa.Column('started_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('closed_at', sa.DateTime(timezone=True), nullable=False),
    sa.Column('start_points', sa.Integer(), nullable=False),
    sa.Column('number_of_slots_for_problems', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('problem',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('statement', sa.String(length=2048), nullable=True),
    sa.Column('answer', sa.String(length=32), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=64), nullable=False),
    sa.Column('hashed_password', sa.String(length=128), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('permission',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('resource_type', sa.Enum('CONTEST', name='permissionresourcetype'), nullable=False),
    sa.Column('resource_id', sa.Integer(), nullable=True),
    sa.Column('permission_type', sa.Enum('ADMIN', 'EDIT', name='permissionactiontype'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_permission_scope', 'permission', ['user_id', 'resource_type', 'resource_id'], unique=False)
    op.create_table('quiz_field',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('contest_id', sa.Integer(), nullable=False),
    sa.Column('number_of_rows', sa.Integer(), nullable=False),
    sa.Column('number_of_columns', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['contest_id'], ['contest.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('problem_card',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('problem_id', sa.Integer(), nullable=False),
    sa.Column('category_name', sa.String(length=32), nullable=True),
    sa.Column('category_price', sa.Integer(), nullable=False),
    sa.Column('quiz_field_id', sa.Integer(), nullable=False),
    sa.Column('row', sa.Integer(), nullable=False),
    sa.Column('column', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['problem_id'], ['problem.id'], ),
    sa.ForeignKeyConstraint(['quiz_field_id'], ['quiz_field.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('selected_problem',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('problem_card_id', sa.Integer(), nullable=False),
    sa.Column('reward_rule', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['problem_card_id'], ['problem_card.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('selected_problem')
    op.drop_table('problem_card')
    op.drop_table('quiz_field')
    op.drop_index('ix_permission_scope', table_name='permission')
    op.drop_table('permission')
    op.drop_table('user')
    op.drop_table('problem')
    op.drop_table('contest')
    # ### end Alembic commands ###
